run-name: FirePerf E2E Tests

on:
  schedule:
    - cron: 4 */4 * * *  # every 4 hours at 04 minutes past the hour
  workflow_dispatch:     # allow triggering the workflow manually

concurrency:
  group: ${{ github.workflow }}

env:
  PERF_E2E_GOOGLE_SERVICES: ${{ secrets.PERF_E2E_GOOGLE_SERVICES }}
  FTL_RESULTS_BUCKET: fireescape

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [ prod, autopush ]
    steps:
      - name: Checkout firebase-android-sdk
        uses: actions/checkout@v3.5.3
      - name: Checkout firebase-android-buildtools
        uses: actions/checkout@v3.5.3
        with:
          repository: FirebasePrivate/firebase-android-buildtools
          token: ${{ secrets.GOOGLE_OSS_BOT_TOKEN }}
          path: firebase-android-buildtools
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: gradle
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Set up fireci
        run: pip3 install -e ci/fireci
      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v0
      - name: Add google-services.json
        run: echo $PERF_E2E_GOOGLE_SERVICES | base64 -d > google-services.json
      - name: Run fireperf end-to-end tests
        run: |
          fireci fireperf_e2e_test \
            --plugin_repo_dir=firebase-android-buildtools \
            --target_environment=${{ matrix.environment }}
      - name: Notify developers upon failures
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const commit = context.sha;
            const run = context.runId;
            const url = `https://github.com/${owner}/${repo}/actions/runs/${run}`;

            const datetime = (new Date()).toLocaleString('en-US', {
              timeZone: 'America/Los_Angeles',
              dateStyle: 'medium',
              timeStyle: 'long',
            });

            const text =
            `Failed on commit ${commit} at ${datetime}.

            ${url}`;

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: owner,
              repo: repo,
              state: 'open',
              labels: 'fireperf-e2e-tests'
            });

            if (issues.length) {
              github.rest.issues.createComment({
                owner: owner,
                repo: repo,
                issue_number: issues[0].number,
                body: text,
              });
            } else {
              github.rest.issues.create({
                owner: owner,
                repo: repo,
                title: 'FirePerf E2E Test Failures',
                body: text,
                labels: ['fireperf-e2e-tests'],
                assignees: ['raymondlam', 'visumickey']
              });
            }
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts (${{ matrix.environment }})
          path: |
            ~/.m2/repository/com/google/firebase/perf-plugin
            **/build/reports
            **/build/test-results
      - name: Setup Java JDK
        uses: actions/setup-java@v3.13.0
     runs-on:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
    java-version: # optional
    # The path to the `.java-version` file. See examples of supported syntax in README file
    java-version-file: # optional
    # Java distribution. See the list of supported distributions in README file
    distribution: 
    # The package type (jdk, jre, jdk+fx, jre+fx)
    java-package: # optional, default is jdk
    # The architecture of the package (defaults to the action runner's architecture)
    architecture: # optional
    # Path to where the compressed JDK is located
    jdkFile: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec
    check-latest: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional, default is github
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional, default is GITHUB_ACTOR
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional, default is GITHUB_TOKEN
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    # Overwrite the settings.xml file if it exists. Default is "true".
    overwrite-settings: # optional, default is true
    # GPG private key to import. Default is empty string.
    gpg-private-key: # optional
    # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
    gpg-passphrase: # optional
    # Name of the build platform to cache dependencies. It can be "maven", "gradle" or "sbt".
    cache: # optional
    # Workaround to pass job status to post job step. This variable is not intended for manual setting
    job-status: # optional, default is ${{ job.status }}
    # The token used to authenticate when fetching version manifests hosted on github.com, such as for the Microsoft Build of OpenJDK. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Name of Maven Toolchain ID if the default name of "${distribution}_${java-version}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-id: # optional
    # Name of Maven Toolchain Vendor if the default name of "${distribution}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-vendor: # optional
